#PF-Tryout ex-33

def guess_number(number_in_mind):
    n=5
    if(n>number_in_mind):
        print ('Number is low')
    elif(n<number_in_mind):
        print('Number is high')
    else:
        print ('You have got it right!!!')

#use the print statements given below wherever applicable
#print ('Number is low')
#print ('Number is high')
#print ('You have got it right!!!')

#Provide different values for number_in_mind and test your program
guess_number(4)


#PF-Exer-34

def find_number_of_combination(number_of_flavours):
    total_combination=0
    #write your logic here
    total_combination=2**number_of_flavours
    return total_combination


#Provide different values for number_of_flavours and test your program
number_of_combination=find_number_of_combination(6)
print(number_of_combination)


#PF-Exer-35

def count_names(name_list):
    count1=0
    count2=0
    for i in range(0,len(name_list)):
        if(name_list[i].endswith("at") and name_list[i].find("at")!=0):
            count1+=1
        if(name_list[i].count("at")!=0):
            count2+=1
    #start writing your code here
    #Populate the variables: count1 and count2

    # Use the below given print statements to display the output
    # Also, do not modify them for verification to work
    print("_at -> ",count1)
    print("%at% -> ",count2)


#Provide different names in the list and test your program
name_list=["Hat","Cat","rabbit","matter"]
count_names(name_list)

#PF-Assgn-46

def nearest_palindrome(number):
    f=True
    while(f):
        number+=1
        s=str(number)
        s1=s[::-1]
        if(s1==s):
            f=False
    return number
    #start writitng your code here

number=12300
print(nearest_palindrome(number))

#PF-Assgn-48

def find_correct(word_dict):
    c1=0
    c2=0
    c3=0
    for i in word_dict:
        if(i==word_dict[i]):
            c1+=1
        elif(len(i)==len(word_dict[i])):
            c=0
            for j in range(0,len(i)):
                if(i[j]!=word_dict[i][j]):
                    c+=1
            if(c<=2):
                c2+=1
            else:
                c3+=1
        else:
                c3+=1
    list=[]
    list.append(c1)
    list.append(c2)
    list.append(c3)
    return list

word_dict={"THEIR": "THEIR","BUSINESS":"BISINESS","WINDOWS":"WINDMILL","WERE":"WEAR","SAMPLE":"SAMPLE"}
print(find_correct(word_dict))
